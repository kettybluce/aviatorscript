##脚本：KA,HAlet errmsg = nil;if((KA!= nil && HA!= nil)||(KA== nil && HA== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（KA HA）";   return errmsg;}##脚本：KB,HBlet errmsg = nil;if((KB!= nil && HB!= nil)||(KB== nil && HB== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（KB HB）";   return errmsg;}##脚本：KC,HClet errmsg = nil;if((KC!= nil && HC!= nil)||(KC== nil && HC== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（KC HC）";   return errmsg;}##脚本：ZA,HA_2,AAlet errmsg = nil;if((ZA!= nil && HA_2!= nil && AA!= nil)||(ZA== nil && HA_2==nil && AA== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（ZA HA AA）";   return errmsg;}##脚本：ZB,HB_2,ABlet errmsg = nil;if((ZB!= nil && HB_2!= nil && AB!= nil)||(ZB== nil && HB_2== nil && AB== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（ZB HB AB）";   return errmsg;}##脚本：ZC,HC_2,AClet errmsg = nil;if((ZC!= nil && HC_2!= nil && AC!= nil)||(ZC== nil && HC_2==nil && AC== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（ZC HC AC）";   return errmsg;}##脚本：WA,GA,AA_2let errmsg = nil;if((WA!= nil && GA!= nil && AA_2!= nil)||(WA== nil && GA== nil && AA_2== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（WA GA AA）";   return errmsg;}##脚本：WB,GB,AB_2let errmsg = nil;if((WB!= nil && GB!= nil && AB_2!= nil)||(WB== nil && GB==nil && AB_2== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（WB GB AB）";   return errmsg;}##脚本：WC-GC-AC_2let errmsg = nil;if((WC!= nil && GC!= nil && AC_2!= nil)||(WC== nil && GC==nil && AC_2== nil)){    return true;} else {   errmsg = "型号中需指定下述参数。（WC GC AC ）";   return errmsg;}##脚本： KZBE类型没有（35 40 45 50）let errmsg = nil;if(type!=nil && type=="KZBE" && D!=nil){    let list=seq.list(35,40,45,50);    let D=decimal(D);    if(include(list,D)){        errmsg = "KZBE类型没有（35 40 45 50）";        return errmsg;    }}return true;##脚本：LA≤L/2let errmsg = nil;if(LA!= nil && L!= nil){   LA=decimal(LA);   L=decimal(L);   let L=L/2;   if(LA<=L){       return true;   }else{       errmsg = "指定 LA尺寸 位于 LA ≤ L/2 范围内。";       return errmsg;   }}return true;##脚本： 5≤MA≤LA-2let errmsg = nil;if(MA!= nil && LA!= nil){   MA=decimal(MA);   LA=decimal(LA);   let LA=LA-2;   if(5<=MA && MA<=LA){       return true;   }else{       errmsg = "需满足公式 5≤MA≤LA-2";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MA!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 5≤MSA≤LA-2let errmsg = nil;if(MSA!= nil && LA!= nil){   MSA=decimal(MSA);   LA=decimal(LA);   let LA=LA-2;   if(5<=MSA && MSA<=LA){       return true;   }else{       errmsg = "需满足公式 5≤MSA≤LA-2";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MSA!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 5≤MMA≤LA-2let errmsg = nil;if(MMA!= nil && LA!= nil){   MMA=decimal(MMA);   LA=decimal(LA);   let LA=LA-2;   if(5<=MMA && MMA<=LA){       return true;   }else{       errmsg = "需满足公式 5≤MMA≤LA-2";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MMA!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 5≤MD≤D×5let errmsg = nil;if(MD!= nil && D!= nil){   MD=decimal(MD);   D=decimal(D);   let newD=D*5;   if(5<=MD && MD<=newD){       return true;   }else{       errmsg = "需满足公式 5≤MD≤D×5";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MD!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 5≤MSD≤D×5let errmsg = nil;if(MSD!= nil && D!= nil){   MSD=decimal(MSD);   D=decimal(D);   let newD=D*5;   if(5<=MSD && MSD<=newD){       return true;   }else{       errmsg = "需满足公式 5≤MSD≤D×5";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MSD!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 5≤MMD≤D×5let errmsg = nil;if(MMD!= nil && D!= nil){   MMD=decimal(MMD);   D=decimal(D);   let newD=D*5;   if(5<=MMD && MMD<=newD){       return true;   }else{       errmsg = "需满足公式 5≤MMD≤D×5";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MMD!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 5≤MB≤LA-2let errmsg = nil;if(MB!= nil && LA!= nil){   MB=decimal(MB);   LA=decimal(LA);   let LA=LA-2;   if(5<=MB && MB<=LA){       return true;   }else{       errmsg = "需满足公式 5≤MB≤LA-2";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MB!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 5≤MSB≤LA-2let errmsg = nil;if(MSB!= nil && LA!= nil){   MSB=decimal(MSB);   LA=decimal(LA);   let LA=LA-2;   if(5<=MSB && MSB<=LA){       return true;   }else{       errmsg = "需满足公式 5≤MSB≤LA-2";       return errmsg;   }}return true;##脚本：KZBE细牙螺纹（精密型）不能用let errmsg = nil;if(type=="KZBE" && MSB!= nil){    errmsg = "KZBE细牙螺纹（精密型）不能用";    return errmsg;}return true;##脚本： 3≤NA≤P-4let errmsg = nil;if(NA!= nil && P!= nil){   NA=decimal(NA);   P=decimal(P);   let P=P-4;   if(3<=NA && NA<=P){       return true;   }else{       errmsg = "需满足公式 3≤NA≤P-4";       return errmsg;   }}return true;##脚本： 3≤NB≤D-4let errmsg = nil;if(NB!= nil && D!= nil){   NB=decimal(NB);   D=decimal(D);   let D=D-4;   if(3<=NB && NB<=D){       return true;   }else{       errmsg = "需满足公式 3≤NB≤D-4";       return errmsg;   }}return true;##脚本： 0≤ KA ≤LA-HA-2let errmsg = nil;if(KA!= nil && LA!= nil && HA!= nil){   KA=decimal(KA);   LA=decimal(LA);   HA=decimal(HA);   let LA=LA-HA-2;   if(0<=KA && KA<=LA){       return true;   }else{       errmsg = "需满足公式 0≤KA≤LA-HA-2";       return errmsg;   }}return true;##脚本： 3≤ HA ≤LA-KA-2let errmsg = nil;if(HA!= nil && LA!= nil && KA!= nil){   HA=decimal(HA);   LA=decimal(LA);   KA=decimal(KA);   let LA=LA-KA-2;   if(3<=HA && HA<=LA){       return true;   }else{       errmsg = "需满足公式 3≤HA≤LA-KA-2";       return errmsg;   }}return true;##脚本： 0≤ KB ≤L-LA-HBlet errmsg = nil;if(KB!= nil && L!= nil && LA!= nil && HB!= nil){   KB=decimal(KB);   L=decimal(L);   LA=decimal(LA);   HB=decimal(HB);   let L=L-LA-HB;   if(2<=KB && KB<=L){       return true;   }else{       errmsg = "需满足公式 2≤KB≤L-LA-HB";       return errmsg;   }}return true;##脚本： HB ≤ L-LA-KBlet errmsg = nil;if(HB!= nil && L!= nil && LA!= nil && KB!= nil){   HB=decimal(HB);   L=decimal(L);   LA=decimal(LA);   KB=decimal(KB);   let L=L-LA-KB;   if(HB<=L){       return true;   }else{       errmsg = "需满足公式 HB≤L-LA-KB";       return errmsg;   }}return true;##脚本： L-LA-KB-HB-1≤KClet errmsg = nil;if(KC!= nil && L!= nil && LA!= nil && KB!= nil && HB!= nil){   KC=decimal(KC);   L=decimal(L);   LA=decimal(LA);   KB=decimal(KB);   HB=decimal(HB);   let L=L-LA-KB-HB-1;   if(KC>=L){       return true;   }else{       errmsg = "需满足公式 L-LA-KB-HB-1≤KC";       return errmsg;   }}return true;##脚本： KC≤L-LA-HClet errmsg = nil;if(KC!= nil && L!= nil && LA!= nil && HC!= nil){   KC=decimal(KC);   L=decimal(L);   LA=decimal(LA);   HC=decimal(HC);   let L=L-LA-HC;   if(KC<=L){       return true;   }else{       errmsg = "需满足公式 KC≤L-LA-HC";       return errmsg;   }}return true;##脚本： HC ≤L-LA-KClet errmsg = nil;if(HC!= nil && L!= nil && LA!= nil && KC!= nil){   HC=decimal(HC);   L=decimal(L);   LA=decimal(LA);   KC=decimal(KC);   let L=L-LA-KC;   if( HC<=L){       return true;   }else{       errmsg = "需满足公式 HC ≤L-LA-KC";       return errmsg;   }}return true;##脚本： 3≤ HA_2 ≤ LA-1let errmsg = nil;if(HA_2!= nil && LA!= nil ){   HA_2=decimal(HA_2);   LA=decimal(LA);   let LA=LA-1;   if(3<=HA_2 && HA_2<=LA){       return true;   }else{       errmsg = "需满足公式 3≤ HA ≤ LA-1";       return errmsg;   }}return true;##脚本：3≤ HA_2 ≤ 100let errmsg = nil;if(HA_2!= nil){   HA_2=decimal(HA_2);   if(3<=HA_2 && HA_2<=100){       return true;   }else{       errmsg = "(3≤HA_2≤100)才能生成型号";       return errmsg;   }}return true;##脚本： 30°≤ AA ≤330°let errmsg = nil;if(AA!= nil){   AA=decimal(AA);   if(30<=AA && AA<=330){       return true;   }else{       errmsg = "需满足公式 30°≤ AA ≤330°";       return errmsg;   }}return true;##脚本： 2≤ZB≤L-LA-HB_3let errmsg = nil;if(ZB!= nil && L!= nil && LA!= nil && HB_3!= nil){   ZB=decimal(ZB);   L=decimal(L);   LA=decimal(LA);   HB_3=decimal(HB_3);   let L=L-LA-HB_3;   if(2<=ZB && ZB<=L){       return true;   }else{       errmsg = "需满足公式 2≤ZB≤L-LA-HB";       return errmsg;   }}return true;##脚本： HB_2 ≤100let errmsg = nil;if(HB_2!= nil){   HB_2=decimal(HB_2);   if(HB_2 <=100){       return true;   }else{       errmsg = "HB_2 ≤100";       return errmsg;   }}return true;##脚本： 30°≤ AB ≤330°if(AB!= nil ){   AB=decimal(AB);   if(30<=AB && AB<=330){       return true;   }else{       errmsg = "需满足公式 30°≤ AB ≤330°";       return errmsg;   }}return true;##脚本： TA≤LA-3let errmsg = nil;if(TA!= nil && LA!= nil){   TA=decimal(TA);   LA=decimal(LA);   let LA=LA-3;   if(TA<=LA){       return true;   }else{       errmsg = "需满足公式 TA≤LA-3";       return errmsg;   }}return true;##脚本： P是27、31、33、34、36到39、41到44、46到49不适用fn getverify(P) {  P=decimal(P);  if(P==27){    return true;  }elsif(P==31){    return true;  }elsif(P==33){    return true;  }elsif(P==34){    return true;  }elsif(P==36){    return true;  }elsif(36<=P && P<=39){    return true;  }elsif(41<=P && P<=44){    return true;  }elsif(46<=P && P<=49){    return true;  }  return false;}let errmsg = nil;if(TA!= nil && P!= nil){   if(getverify(P)){       errmsg = "P是27、31、33、34、36到39、41到44、46到49不适用";       return errmsg;   }}return true;##脚本： P是27、31、33、34、36到39、41到44、46到49不适用fn getverify(P) {  P=decimal(P);  if(P==27){    return true;  }elsif(P==31){    return true;  }elsif(P==33){    return true;  }elsif(P==34){    return true;  }elsif(P==36){    return true;  }elsif(36<=P && P<=39){    return true;  }elsif(41<=P && P<=44){    return true;  }elsif(46<=P && P<=49){    return true;  }  return false;}let errmsg = nil;if(TB!= nil && P!= nil){   if(getverify(P)){       errmsg = "P是27、31、33、34、36到39、41到44、46到49不适用";       return errmsg;   }}return true;##脚本： P是27、31、33、34、36到39、41到44、46到49不适用fn getverify(P) {  P=decimal(P);  if(P==27){    return true;  }elsif(P==31){    return true;  }elsif(P==33){    return true;  }elsif(P==34){    return true;  }elsif(P==36){    return true;  }elsif(36<=P && P<=39){    return true;  }elsif(41<=P && P<=44){    return true;  }elsif(46<=P && P<=49){    return true;  }  return false;}let errmsg = nil;if(TC!= nil && P!= nil){   if(getverify(P)){       errmsg = "P是27、31、33、34、36到39、41到44、46到49不适用";       return errmsg;   }}return true;##脚本： SC≤L-LA-l1fn getConstant(D) {  let l=0;  D=decimal(D);  if(D==10){    l=8;    return l;  }elsif(12<=D && D<= 25){    l=10;    return l;  }elsif( 30<=D && D<= 35){    l=15;    return l;  }elsif( 40<=D && D<= 50){     l=20;     return l;  }  return l;}let errmsg = nil;if(SC!= nil && L!= nil && LA!= nil){   SC=decimal(SC);   L=decimal(L);   LA=decimal(LA);   l1=getConstant(D);   let L=L-LA-l1;   if(0<=SC && SC<=L){       return true;   }else{       errmsg = "需满足公式 SC≤L-LA-l1 ";       return errmsg;   }}return true;##脚本： WA≤LA-GA-2let errmsg = nil;if(WA!= nil && LA!= nil && GA!= nil){   WA=decimal(WA);   LA=decimal(LA);   GA=decimal(GA);   let LA=LA-GA-2;   if(WA<=LA){       return true;   }else{       errmsg = "需满足公式 WA≤LA-GA-2";       return errmsg;   }}return true;##脚本： GA≤LA-WA-2let errmsg = nil;if(GA!= nil && LA!= nil && WA!= nil){   GA=decimal(GA);   LA=decimal(LA);   WA=decimal(WA);   let LA=LA-WA-2;   if(GA<=LA){       return true;   }else{       errmsg = "需满足公式 GA≤LA-WA-2";       return errmsg;   }}return true;##脚本： 0°≤ AA_2 ≤330°let errmsg = nil;if(AA_2!= nil){   AA_2=decimal(AA_2);   if(0<=AA_2 && AA_2<=330){       return true;   }else{       errmsg = "需满足公式 0°≤ AA ≤330°";       return errmsg;   }}return true;##脚本： WB≤L-LA-GBlet errmsg = nil;if(WB!= nil && L!= nil && LA!= nil && GB!= nil){   WB=decimal(WB);   L=decimal(L);   LA=decimal(LA);   GB=decimal(GB);   let L=L-LA-GB;   if(2<=WB && WB<=L){       return true;   }else{       errmsg = "需满足公式 WB≤L-LA-GB";       return errmsg;   }}return true;##脚本： GB≤L-LA-WBlet errmsg = nil;if(GB!= nil && L!= nil && LA!= nil && WB!= nil){   GB=decimal(GB);   L=decimal(L);   LA=decimal(LA);   WB=decimal(WB);   let L=L-LA-WB;   if(0<=GB && GB<=L){       return true;   }else{       errmsg = "需满足公式 GB≤L-LA-WB";       return errmsg;   }}return true;##脚本： 0°≤ AB_2 ≤330°let errmsg = nil;if(AB_2!= nil && 330!= nil){   AB_2=decimal(AB_2);   if(0<=AB_2 && AB_2<=330){       return true;   }else{       errmsg = "需满足公式 0°≤ AB ≤330°";       return errmsg;   }}return true;##脚本： WB+GB+1 ≤ WClet errmsg = nil;if(WC!= nil && WB!= nil && GB!= nil){   WC=decimal(WC);   WB=decimal(WB);   GB=decimal(GB);   let WB=WB+GB+1;   if(WC>=WB){       return true;   }else{       errmsg = "需满足公式 WB+GB+1≤WC";       return errmsg;   }}return true;##脚本： WC ≤L-LA-GClet errmsg = nil;if(WC!= nil && L!= nil && LA!= nil && GC!= nil){   WC=decimal(WC);   L=decimal(L);   LA=decimal(LA);   GC=decimal(GC);   let L=L-LA-GC;   if(WC<=L){       return true;   }else{       errmsg = "需满足公式 WC≤L-LA-GC";       return errmsg;   }}return true;##脚本： 0≤ GC ≤L-LA-WClet errmsg = nil;if(GC!= nil && L!= nil && LA!= nil && WC!= nil){   GC=decimal(GC);   L=decimal(L);   LA=decimal(LA);   WC=decimal(WC);   let L=L-LA-WC;   if(0<=GC && GC<=L){       return true;   }else{       errmsg = "需满足公式 0≤GC≤L-LA-WC";       return errmsg;   }}return true;##脚本： 0°≤ AC_2 ≤330°let errmsg = nil;if(AC_2!= nil && 330!= nil){   AC_2=decimal(AC_2);   if(0<=AC_2 && AC_2<=330){       return true;   }else{       errmsg = "需满足公式 0°≤ AC ≤330°";       return errmsg;   }}return true;